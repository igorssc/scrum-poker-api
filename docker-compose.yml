version: '3.8'

networks:
  app_tier:
    driver: bridge

services:
  prisma_postgres:
    container_name: scrum_poker_postgres
    image: postgres:16-alpine
    restart: on-failure
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - prisma_postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    networks:
      - app_tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: scrum_poker_api
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - ${APP_PORT:-8089}:3000
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@scrum_poker_postgres:5432/${POSTGRES_DATABASE}
    command: ash -c "npx prisma migrate dev && npm install && npm run start:dev"
    networks:
      - app_tier
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      prisma_postgres:
        condition: service_healthy

  prisma_studio:
    container_name: scrum_poker_studio
    image: node:20-alpine
    restart: on-failure
    working_dir: /app
    volumes:
      - .:/app
    entrypoint: ["npx", "prisma", "studio"]
    ports:
      - ${PRISMA_STUDIO_PORT:-5555}:5555
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@scrum_poker_postgres:5432/${POSTGRES_DATABASE}
    networks:
      - app_tier
    depends_on:
      prisma_postgres:
        condition: service_healthy

volumes:
  prisma_postgres:
  